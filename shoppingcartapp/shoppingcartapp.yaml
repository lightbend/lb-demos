---
apiVersion: "apps/v1"
kind: Deployment
metadata:
  name: "shoppingcartapp-v0-1"
  labels:
    appName: shoppingcartapp
    appNameVersion: "shoppingcartapp-v0-1"
spec:
  replicas: 3
  selector:
    matchLabels:
      appNameVersion: "shoppingcartapp-v0-1"
  template:
    metadata:
      labels:
        appName: shoppingcartapp
        appNameVersion: "shoppingcartapp-v0-1"
      annotations:
        "prometheus.io/scrape": "true"
        "prometheus.io/scheme": http
        "prometheus.io/path": "/"
        "prometheus.io/port": "9001"
    spec:
      restartPolicy: Always
      securityContext:
        runAsUser: 0
        fsGroup: 0
      containers:
        - name: shoppingcartapp
          # Note: pre-pend with your docker registry (if not using dockerhub) and your namespace/username if using a
          # remote image
          #image: "seglo/shoppingcartapp:0.1"
          image: "shoppingcartapp:0.1"
          # Note: If running on minikube and you published the shoppingcartapp docker image locally then set the
          # `imagePullPolicy` to `Never` or `IfNotPresent` to avoid image pull errors.
          #imagePullPolicy: Never
          imagePullPolicy: Always
          securityContext:
            privileged: true
            allowPrivilegeEscalation: true
            capabilities:
             add: ["NET_ADMIN"]
          env:
            - name: "RP_APP_NAME"
              value: shoppingcartapp
            - name: "RP_APP_TYPE"
              value: basic
            - name: "RP_APP_VERSION"
              value: "0.1"
            - name: "RP_DYN_JAVA_OPTS"
              value: "-Dakka.discovery.kubernetes-api.pod-namespace=$RP_NAMESPACE"
            - name: "RP_ENDPOINTS"
              value: "AKKA_REMOTE,AKKA_MGMT_HTTP,APP,CINNAMON"
            - name: "RP_ENDPOINTS_COUNT"
              value: "4"
            - name: "RP_ENDPOINT_0_BIND_HOST"
              valueFrom:
                fieldRef:
                  fieldPath: "status.podIP"
            - name: "RP_ENDPOINT_0_BIND_PORT"
              value: "10000"
            - name: "RP_ENDPOINT_0_HOST"
              valueFrom:
                fieldRef:
                  fieldPath: "status.podIP"
            - name: "RP_ENDPOINT_0_PORT"
              value: "10000"
            - name: "RP_ENDPOINT_1_BIND_HOST"
              valueFrom:
                fieldRef:
                  fieldPath: "status.podIP"
            - name: "RP_ENDPOINT_1_BIND_PORT"
              value: "10001"
            - name: "RP_ENDPOINT_1_HOST"
              valueFrom:
                fieldRef:
                  fieldPath: "status.podIP"
            - name: "RP_ENDPOINT_1_PORT"
              value: "10001"
            - name: "RP_ENDPOINT_2_BIND_HOST"
              valueFrom:
                fieldRef:
                  fieldPath: "status.podIP"
            - name: "RP_ENDPOINT_2_BIND_PORT"
              value: "9975"
            - name: "RP_ENDPOINT_2_HOST"
              valueFrom:
                fieldRef:
                  fieldPath: "status.podIP"
            - name: "RP_ENDPOINT_2_PORT"
              value: "9975"
            - name: "RP_ENDPOINT_3_BIND_HOST"
              valueFrom:
                fieldRef:
                  fieldPath: "status.podIP"
            - name: "RP_ENDPOINT_3_BIND_PORT"
              value: "9001"
            - name: "RP_ENDPOINT_3_HOST"
              valueFrom:
                fieldRef:
                  fieldPath: "status.podIP"
            - name: "RP_ENDPOINT_3_PORT"
              value: "9001"
            - name: "RP_ENDPOINT_AKKA_MGMT_HTTP_BIND_HOST"
              valueFrom:
                fieldRef:
                  fieldPath: "status.podIP"
            - name: "RP_ENDPOINT_AKKA_MGMT_HTTP_BIND_PORT"
              value: "10001"
            - name: "RP_ENDPOINT_AKKA_MGMT_HTTP_HOST"
              valueFrom:
                fieldRef:
                  fieldPath: "status.podIP"
            - name: "RP_ENDPOINT_AKKA_MGMT_HTTP_PORT"
              value: "10001"
            - name: "RP_ENDPOINT_AKKA_REMOTE_BIND_HOST"
              valueFrom:
                fieldRef:
                  fieldPath: "status.podIP"
            - name: "RP_ENDPOINT_AKKA_REMOTE_BIND_PORT"
              value: "10000"
            - name: "RP_ENDPOINT_AKKA_REMOTE_HOST"
              valueFrom:
                fieldRef:
                  fieldPath: "status.podIP"
            - name: "RP_ENDPOINT_AKKA_REMOTE_PORT"
              value: "10000"
            - name: "RP_ENDPOINT_APP_BIND_HOST"
              valueFrom:
                fieldRef:
                  fieldPath: "status.podIP"
            - name: "RP_ENDPOINT_APP_BIND_PORT"
              value: "9975"
            - name: "RP_ENDPOINT_APP_HOST"
              valueFrom:
                fieldRef:
                  fieldPath: "status.podIP"
            - name: "RP_ENDPOINT_APP_PORT"
              value: "9975"
            - name: "RP_ENDPOINT_CINNAMON_BIND_HOST"
              valueFrom:
                fieldRef:
                  fieldPath: "status.podIP"
            - name: "RP_ENDPOINT_CINNAMON_BIND_PORT"
              value: "9001"
            - name: "RP_ENDPOINT_CINNAMON_HOST"
              valueFrom:
                fieldRef:
                  fieldPath: "status.podIP"
            - name: "RP_ENDPOINT_CINNAMON_PORT"
              value: "9001"
            - name: "RP_JAVA_OPTS"
              value: "-Dconfig.resource=rp-application.conf -Dakka.discovery.method=kubernetes-api -Dakka.management.cluster.bootstrap.contact-point-discovery.effective-name=shoppingcartapp -Dakka.management.cluster.bootstrap.contact-point-discovery.required-contact-point-nr=2 -Dakka.discovery.kubernetes-api.pod-label-selector=appName=%s"
            - name: "RP_KUBERNETES_POD_IP"
              valueFrom:
                fieldRef:
                  fieldPath: "status.podIP"
            - name: "RP_KUBERNETES_POD_NAME"
              valueFrom:
                fieldRef:
                  fieldPath: "metadata.name"
            - name: "RP_MODULES"
              value: "akka-cluster-bootstrapping,akka-management,common,service-discovery,status"
            - name: "RP_NAMESPACE"
              valueFrom:
                fieldRef:
                  fieldPath: "metadata.namespace"
            - name: "RP_PLATFORM"
              value: kubernetes
          ports:
            - containerPort: 10000
              name: "akka-remote"
            - containerPort: 10001
              name: "akka-mgmt-http"
            - containerPort: 9975
              name: app
            - containerPort: 9001
              name: cinnamon
          volumeMounts: []
          command:
            - "/rp-start"
          args:
            - "bin/shoppingcartapp"
          readinessProbe:
            httpGet:
              path: "/platform-tooling/ready"
              port: "akka-mgmt-http"
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: "/platform-tooling/healthy"
              port: "akka-mgmt-http"
            periodSeconds: 15
            initialDelaySeconds: 60
      volumes: []
---
apiVersion: v1
kind: Service
metadata:
  labels:
    appName: shoppingcartapp
  name: shoppingcartapp
spec:
  type: NodePort
  ports:
    - name: "akka-remote"
      port: 10000
      protocol: TCP
      targetPort: 10000
    - name: "akka-mgmt-http"
      port: 10001
      protocol: TCP
      targetPort: 10001
    - name: app
      port: 9975
      protocol: TCP
      targetPort: 9975
    - name: cinnamon
      port: 9001
      protocol: TCP
      targetPort: 9001
  selector:
    appName: shoppingcartapp
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pod-reader
  namespace: default
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: read-pods
  namespace: default
subjects:
# Note the `name` line below. The first default refers to the namespace. The second refers to the service account name.
# For instance, `name: system:serviceaccount:myns:default` would refer to the default service account in namespace `myns`
- kind: User
  name: system:serviceaccount:default:default
roleRef:
  kind: Role
  name: pod-reader
  apiGroup: rbac.authorization.k8s.io
